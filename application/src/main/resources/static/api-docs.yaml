openapi: 3.0.1
info:
  title: Warehouse
  description: This site provides an overview of all endpoints (API)
servers:
  - url: http://localhost:8443/
tags:
  - name: User Controller
  - name: Item Controller
  - name: Truck Controller
  - name: Order Controller
  - name: Delivery Controller
paths:
  /users/login:
    post:
      tags:
        - User Controller
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthToken'

  /users:
    get:
      tags:
        - User Controller
      security:
        - BearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
    post:
      tags:
        - User Controller
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      tags:
        - User Controller
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - User Controller
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - User Controller
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
            format: int64
          required: true
      reponses:
        204:
          description: No Content

  /items:
    get:
      tags:
        - Item Controller
      security:
        - BearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
    post:
      tags:
        - Item Controller
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

  /items/{itemId}:
    get:
      tags:
        - Item Controller
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    patch:
      tags:
        - Item Controller
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    delete:
      tags:
        - Item Controller
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
            format: int64
          required: true
      reponses:
        204:
          description: No Content

  /trucks:
    get:
      tags:
        - Truck Controller
      security:
        - BearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
    post:
      tags:
        - Truck Controller
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Truck'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Truck'

  /trucks/{truckId}:
    get:
      tags:
        - Truck Controller
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: truckId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Truck'
    patch:
      tags:
        - Truck Controller
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: truckId
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Truck'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Truck'
    delete:
      tags:
        - Truck Controller
      parameters:
        - in: path
          name: truckId
          schema:
            type: integer
            format: int64
          required: true
      reponses:
        204:
          description: No Content

  /orders:
    get:
      tags:
        - Order Controller
      security:
        - BearerAuth: [ ]
      parameters:
        - in: query
          name: statuses
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
    post:
      tags:
        - Order Controller
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /orders/{orderId}:
    get:
      tags:
        - Order Controller
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    patch:
      tags:
        - Order Controller
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    post:
      tags:
        - Order Controller
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
            format: int64
          required: true
        - in: query
          name: status
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reason'
      reponses:
        200:
          description: OK

  /delivery:
    post:
      tags:
        - Delivery Controller
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
        responses:
          200:
            description: OK
components:
  schemas:
    UserLogin:
      title: UserLogin
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    OAuthToken:
      title: OAuthToken
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer

    User:
      title: User
      type: object
      properties:
        id:
          type: integer
          format: int64
        fullname:
          type: string
        email:
          type: string
        username:
          type: string
        authority:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            description:
              type: string

    Item:
      title: Item
      type: object
      properties:
        id:
          type: integer
          format: int64
        item_name:
          type: string
        quantity:
          type: integer
          format: int64
        unit_price:
          type: number

    Truck:
      title: Truck
      type: object
      properties:
        id:
          type: integer
          format: int64
        chassis_number:
          type: string
        license_plate:
          type: string
        last_daliverydate:
          type: string

    Order:
      title: Order
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          type: object
          schema:
            $ref: '#/components/schemas/User'
        submitted_date:
          type: string
        deadline_date:
          type: string
        status:
          type: string
        reason:
          type: string
        delivery_date:
          type: string
        items:
          type: array
          items:
            type: object
            schema:
              $ref: '#/components/schemas/Item'

    Reason:
      title: Reason
      type: object
      properties:
        reason:
          type: string

    Page:
      title: Page
      type: object
      properties:
        item:
          type: array
          items:
            type: object
        totalItems:
          type: integer
          format: int64
        totalPages:
          type: integer
        currentPage:
          type: integer

    Delivery:
      title: Delivery
      type: object
      properties:
        orderIds:
          type: array
          items:
            type: integer
            format: int64
        truckIds:
          type: array
          items:
            type: integer
            format: int64
        delivery_date:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BearerAuth: []